package com.twintiment.view.views;

import java.util.Arrays;
import java.util.List;

import com.twintiment.presenter.TwintimentPresenter;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class SearchViewImpl extends CustomComponent implements SearchView, Button.ClickListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private HorizontalLayout mainLayout;
	@AutoGenerated
	private VerticalLayout verticalLayout_1;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;
	@AutoGenerated
	private Button stopButton;
	@AutoGenerated
	private Button startButton;
	@AutoGenerated
	private TextField textField_1;
	@AutoGenerated
	private Table table;
	private TwintimentPresenter presenter = TwintimentPresenter.getInstance(this);
	
	private static final long serialVersionUID = -6224565670170192401L;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public SearchViewImpl() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		//Initialise table
		table.addContainerProperty("Message", String.class, "");
		table.addContainerProperty("Score", Double.class, 0.0d);
		table.setColumnWidth("Score", 75);
		table.setColumnWidth("Message", (int) (table.getWidth()-table.getColumnWidth("Score")));
	}

	@Override
	public void enter(ViewChangeEvent event) {
		
		startButton.addClickListener(this);
		stopButton.addClickListener(this);
		
	}

	@Override
	public void buttonClick(ClickEvent event) {
//		UI.getCurrent().getNavigator().navigateTo(MainView.ID);
		
		if(event.getButton().equals(startButton)) {
			presenter.startStreaming();
		}
		else if(event.getButton().equals(stopButton)) {
			presenter.stopStreaming();
		}
	}

	@Override
	public List<String> getFilterTerms() {

		String[] arr = textField_1.getValue().split(" ");
		return Arrays.asList(arr);
	}


	@Override
	public void addTableRow(Object[] cells) {
		table.addItem(cells, null);
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// table
		table = new Table();
		table.setImmediate(false);
		table.setWidth("543px");
		table.setHeight("-1px");
		mainLayout.addComponent(table);
		mainLayout.setComponentAlignment(table, new Alignment(48));
		
		// verticalLayout_1
		verticalLayout_1 = buildVerticalLayout_1();
		mainLayout.addComponent(verticalLayout_1);
		mainLayout.setComponentAlignment(verticalLayout_1, new Alignment(48));
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_1() {
		// common part: create layout
		verticalLayout_1 = new VerticalLayout();
		verticalLayout_1.setImmediate(false);
		verticalLayout_1.setWidth("-1px");
		verticalLayout_1.setHeight("-1px");
		verticalLayout_1.setMargin(false);
		
		// textField_1
		textField_1 = new TextField();
		textField_1.setImmediate(false);
		textField_1.setWidth("-1px");
		textField_1.setHeight("-1px");
		verticalLayout_1.addComponent(textField_1);
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		verticalLayout_1.addComponent(horizontalLayout_2);
		
		return verticalLayout_1;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("-1px");
		horizontalLayout_2.setHeight("-1px");
		horizontalLayout_2.setMargin(false);
		
		// startButton
		startButton = new Button();
		startButton.setCaption("Start");
		startButton.setImmediate(true);
		startButton.setWidth("-1px");
		startButton.setHeight("-1px");
		horizontalLayout_2.addComponent(startButton);
		
		// stopButton
		stopButton = new Button();
		stopButton.setCaption("Stop");
		stopButton.setImmediate(true);
		stopButton.setWidth("-1px");
		stopButton.setHeight("-1px");
		horizontalLayout_2.addComponent(stopButton);
		
		return horizontalLayout_2;
	}

}
